apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  name: dag-model-serving-19eb0b8585b4fa82f251635e6acf1200a651b3b3
spec:
  arguments:
    parameters:
    - name: servicename
      value: train-onboard-mlops-model
    - name: branch
      value: train/2021-1120
    - name: remote_repo
      value: https://github.com/mojokb/onboard-mlops-model.git
    - name: image
      value: 192.168.64.5:30000/bentoml-torch:19eb0b8585b4fa82f251635e6acf1200a651b3b3
    - name: hash
      value: 19eb0b8585b4fa82f251635e6acf1200a651b3b3
  entrypoint: model-repo-pull
  podGC:
    labelSelector:
      matchLabels:
        should-be-deleted: "true"
    strategy: OnWorkflowCompletion
  templates:
  - container:
      args:
      - -R
      - '{{inputs.parameters.path}}'
      command:
      - ls
      image: alpine:latest
      volumeMounts:
      - mountPath: /workdir
        name: workdir
    inputs:
      parameters:
      - name: path
    metadata:
      labels:
        should-be-deleted: "true"
    name: ls-template
  - container:
      args:
      - git clone -b {{workflow.parameters.branch}} {{workflow.parameters.remote_repo}}
        /workdir && cd /workdir && dvc pull
      command:
      - sh
      - -c
      image: brightfly/workflow:git
      volumeMounts:
      - mountPath: /workdir
        name: workdir
    metadata:
      labels:
        should-be-deleted: "true"
    name: gitdvc-template
  - container:
      args:
      - cp /workdir/bento_pack/*.py /workdir && cd /workdir && python bento_pack.py
      command:
      - sh
      - -c
      image: brightfly/workflow:bentoml.torch
      volumeMounts:
      - mountPath: /workdir
        name: workdir
    metadata:
      labels:
        should-be-deleted: "true"
    name: bentoml-pack-template
  - container:
      args:
      - --cache=true
      - --context=/workdir/bentoml
      - --destination={{workflow.parameters.image}}
      command:
      - /kaniko/executor
      image: gcr.io/kaniko-project/executor
      volumeMounts:
      - mountPath: /workdir
        name: workdir
    metadata:
      labels:
        should-be-deleted: "true"
    name: kaniko-template
  - metadata:
      labels:
        should-be-deleted: "true"
    name: test-model
    outputs:
      parameters:
      - name: f1-score
        valueFrom:
          path: /tmp/result.txt
    script:
      command:
      - python
      image: brightfly/workflow:bentoml.torch
      source: "import sys\nsys.path.append(\"/workdir\")\nfrom notebooks.torch_test
        import TrainModel\ntest_model = TrainModel()\ntest_model.load_model(\"/workdir/models/model.pt\")\nf1_score
        = test_model.test(\"/workdir/data/processed/test_set.npz\")\nf = open('/tmp/result.txt',
        'w')\nf.write(str(f1_score))\nprint(f1_score)        \n"
      volumeMounts:
      - mountPath: /workdir
        name: workdir
      workingDir: /workdir
  - container:
      args:
      - python find.py --service_name={{workflow.parameters.servicename}} > /tmp/result.txt
        && cat /tmp/result.txt
      command:
      - sh
      - -c
      image: brightfly/get-label:latest
    metadata:
      labels:
        should-be-deleted: "true"
    name: get-f1-score-from-base
    outputs:
      parameters:
      - name: f1-score
        valueFrom:
          path: /tmp/result.txt
  - inputs:
      parameters:
      - name: f1-score
    name: deploy-knative-template
    resource:
      action: apply
      manifest: "apiVersion: serving.knative.dev/v1 \nkind: Service\nmetadata:\n  name:
        {{workflow.parameters.servicename}}\n  labels:\n     f1-score: \"{{inputs.parameters.f1-score}}\"\nspec:\n
        \ template:\n    spec:\n      containers:\n        - image: {{workflow.parameters.image}}\n
        \         ports:\n            - containerPort: 5000\n          livenessProbe:\n
        \           httpGet:\n              path: /healthz\n            initialDelaySeconds:
        3\n            periodSeconds: 5\n          readinessProbe:\n            httpGet:\n
        \             path: /healthz\n            initialDelaySeconds: 3\n            periodSeconds:
        5\n            failureThreshold: 3\n            timeoutSeconds: 60         \n"
  - dag:
      tasks:
      - name: gitdvc-pull
        template: gitdvc-template
      - dependencies:
        - gitdvc-pull
        name: test-model
        template: test-model
      - dependencies:
        - gitdvc-pull
        name: get-f1-score-from-base
        template: get-f1-score-from-base
      - dependencies:
        - test-model
        - get-f1-score-from-base
        name: bentoml-packing-model
        template: bentoml-pack-template
        when: '{{tasks.test-model.outputs.result}} > {{tasks.get-f1-score-from-base.outputs.result}}'
      - arguments:
          parameters:
          - name: path
            value: /workdir/bentoml
        dependencies:
        - bentoml-packing-model
        name: list-model-pack
        template: ls-template
      - dependencies:
        - bentoml-packing-model
        name: containerize
        template: kaniko-template
      - arguments:
          parameters:
          - name: f1-score
            value: '{{tasks.test-model.outputs.result}}'
        dependencies:
        - containerize
        name: deploy
        template: deploy-knative-template
    name: model-repo-pull
  volumeClaimTemplates:
  - metadata:
      name: workdir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
