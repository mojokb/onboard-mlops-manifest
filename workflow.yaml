apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  name: dag-model-serving
spec:
  entrypoint: model-repo-pull             # 시작점 위치
  arguments:
    parameters:
      - name: servicename
        value: "serving"
      - name: branch
        value: "train/211110"
      - name: remote_repo
        value: "https://github.com/mojokb/onboard-mlops-model.git"
      - name: image
        value: "192.168.64.5:30000/torch:serving"
  podGC:
    strategy: OnWorkflowCompletion
    labelSelector:
      matchLabels:
        should-be-deleted: "true"        
  volumeClaimTemplates:                 # define volume, same syntax as k8s Pod spec
  - metadata:
      name: workdir                     # name of volume claim
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi     
  templates:
  - name: ls-template
    metadata:
      labels:
        should-be-deleted: "true"    
    inputs:
      parameters:
      - name: path
    container:
      image: alpine:latest
      command: [ls]
      args: ["-R", "{{inputs.parameters.path}}"]
      volumeMounts:                     # same syntax as k8s Pod spec
      - name: workdir
        mountPath: /workdir      
  - name: gitdvc-template
    metadata:
      labels:
        should-be-deleted: "true"    
    container:
      image: brightfly/workflow:git
      command: [sh, -c]
      args: ["git clone -b {{workflow.parameters.branch}} {{workflow.parameters.remote_repo}} /workdir && cd /workdir && dvc pull"]
      volumeMounts:                     # same syntax as k8s Pod spec
      - name: workdir
        mountPath: /workdir
  - name: bentoml-pack-template
    metadata:
      labels:
        should-be-deleted: "true"
    container:
      image: brightfly/workflow:bentoml.torch
      command: [sh, -c]
      args: ["cp /root/*.py /workdir && cd /workdir && python bento_pack.py"]
      volumeMounts:                     # same syntax as k8s Pod spec
      - name: workdir
        mountPath: /workdir
  - name: kaniko-template
    metadata:
      labels:
        should-be-deleted: "true"
    container: 
      image: gcr.io/kaniko-project/executor
      command: [/kaniko/executor]
      args: 
      - "--cache=true"
      - "--context=/workdir/bentoml"
      - "--destination={{workflow.parameters.image}}"
      volumeMounts:                     # same syntax as k8s Pod spec
      - name: workdir
        mountPath: /workdir
  - name: test-model
    metadata:
      labels:
        should-be-deleted: "true"
    script:
      image: brightfly/workflow:bentoml.torch
      command: [python]
      source: |
        import sys
        sys.path.append("/workdir")
        from test import TestModel
        test_model = TestModel()
        test_model.load_model("/workdir/model/model.pt")
        print(test_model.test())       
      workingDir: /workdir  
      volumeMounts:                     # same syntax as k8s Pod spec
      - name: workdir
        mountPath: /workdir
  - name: deploy-knative-template
    resource:
      action: create
      successCondition: status.succeeded > 0
      failureCondition: status.failed > 3
      manifest: |
        apiVersion: serving.knative.dev/v1 
        kind: Service
        metadata:
          name: serving-test
        spec:
          template:
            spec:
              containers:
                - image: {{workflow.parameters.image}}
                  ports:
                    - containerPort: 5000
                  livenessProbe:
                    httpGet:
                      path: /healthz
                    initialDelaySeconds: 3
                    periodSeconds: 5
                  readinessProbe:
                    httpGet:
                      path: /healthz
                    initialDelaySeconds: 3
                    periodSeconds: 5
                    failureThreshold: 3
                    timeoutSeconds: 60         
  - name: model-repo-pull
    dag:
      tasks:
      - name: gitdvc-pull            
        template: gitdvc-template
      - name: test-model
        template: test-model
        dependencies: [gitdvc-pull]
      - name: bentoml-packing-model
        template: bentoml-pack-template
        dependencies: [test-model]
        when: "{{tasks.test-model.outputs.result}} > 0.90"
      - name: list-model-pack
        dependencies: [bentoml-packing-model]
        template: ls-template
        arguments:
          parameters: [{name: path, value: "/workdir/bentoml"}]
      - name: containerize
        dependencies: [bentoml-packing-model]
        template: kaniko-template
      - name: deploy  
        dependencies: [containerize]
        template: deploy-knative-template
