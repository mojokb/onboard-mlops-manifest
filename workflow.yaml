apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  name: dag-model-serving-test-4
spec:
  entrypoint: model-repo-pull             # 시작점 위치
  volumeClaimTemplates:                 # define volume, same syntax as k8s Pod spec
  - metadata:
      name: workdir                     # name of volume claim
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:ß
          storage: 1Gi     
  templates:
  - name: git
    inputs:
      parameters:
      - name: branch
      - name: remote_repo
    container:
      image: brightfly/workflow:git
      command: ["git", "clone",  "-b", "{{inputs.parameters.branch}}", "{{inputs.parameters.remote_repo}}", "/workdir"]
      volumeMounts:                     # same syntax as k8s Pod spec
      - name: workdir
        mountPath: /workdir
  - name: dvc
    container:
      image: brightfly/workflow:git
      command: [sh, -c]
      #args: ["cd /workdir | dvc pull"]
      args: ["ls /workdir"]
      volumeMounts:                     # same syntax as k8s Pod spec
      - name: workdir
        mountPath: /workdir
  - name: model-repo-pull
    dag:
      tasks:
      - name: git-pull            
        template: git            # 위에서 정의한 echo template을 이용하여
        arguments:                # 이때 A라는 파라미터를 전달합니다.
          parameters: [{name: branch, value: "train/211110"}, {name: remote_repo, value: "https://github.com/mojokb/onboard-mlops-model.git"} ]
      - name: dvc-pull
        template: dvc
        dependencies: [git-pull]
